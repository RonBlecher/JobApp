@model JobViewModel

@{
    ViewData["Title"] = "Create";
    Layout = LayoutDecision.LocateLayout(User);

    var publisher = (Publisher)ViewData["Publisher"];

    var skills = (List<Skill>)ViewData["Skills"];
    SelectList jobSkillsItems = new SelectList(skills.Select(p => p.Name));

    var cities = (List<City>)ViewData["Cities"];
    SelectList jobCitiesItems = new SelectList(cities.Select(c => c.Name));
}

<h1>Publish New Job</h1>

<h4>Job details</h4>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" id="PublisherId" name="PublisherId" value="@publisher.ID" />
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="JobSkillsId" class="control-label"></label>
                @Html.ListBoxFor(model => model.JobSkillsId, jobSkillsItems, "Select Skills")
                <span asp-validation-for="JobSkillsId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="JobCities" class="control-label"></label>
                @Html.ListBoxFor(model => model.JobCities, jobCitiesItems, "Select Cities")
                <span asp-validation-for="JobCities" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div id="map"></div>
            </div>
            <div class="form-group">
                <label asp-for="Lon" class="control-label"></label>
                <input id="lon" asp-for="Lon" class="form-control" readonly="readonly" />
                <span asp-validation-for="Lon" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Lat" class="control-label"></label>
                <input id="lat" asp-for="Lat" class="form-control" readonly="readonly" />
                <span asp-validation-for="Lat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script src="~/js/core/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMnkR_IpENkGrRXP5PxVOEDDjgjSXqpfU&callback=initMap"
        defer></script>
<script>
    let map;
    let currentMarker = null

    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: 32.397, lng: 31.644 },
            zoom: 8,
        })

        map.addListener("click", (e) => {
            $('#lon').val(e.latLng.lng)
            $('#lat').val(e.latLng.lat)
            if (currentMarker) {
                currentMarker.setMap(null);
                currentMarker = null
            }
            currentMarker = placeMarkerAndPanTo(e.latLng, map);
        });

        function placeMarkerAndPanTo(latLng, map) {
            return new google.maps.Marker({
                position: latLng,
                map: map,
            });
            map.panTo(latLng);
        }
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
